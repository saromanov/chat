version: '3.2'

volumes:
  tmp-data:
  postgres:

services:
  app:
    image: motorcode/chat:0.0.1
    working_dir: /src
    ports:
      -
        target: 3005
        published: 3005
    restart: unless-stopped
    environment:
      HOME: /tmp
      GOPATH: /tmp
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MIGRATIONS_PATH: ./migrations
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - .:/src:cached
      - tmp-data:/tmp:cached
    networks:
      - test_app
    depends_on:
      - postgres
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  postgres:
    image: motorcode/chat-postgres:0.0.1
    restart: unless-stopped
    environment:
      POSTGERS_USER: chatapp
      POSTGERS_NAME: chatapp
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /storage/postgres-data
    volumes:
      - postgres:/storage/postgres-data
    ports:
      - "5433:5433"
    networks:
      - test_app
  loki:
    image: grafana/loki:1.5.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - test_app

  promtail:
    image: grafana/promtail:1.5.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - test_app

  grafana:
    image: grafana/grafana:master
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    ports:
      - 3000:3000
    networks: 
      - test_app
    volumes:
      - ./configs/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources:ro

networks:
  test_app:
